[{"/home/danbo/Documents/React Flask/client/src/index.js":"1","/home/danbo/Documents/React Flask/client/src/App.js":"2","/home/danbo/Documents/React Flask/client/src/reportWebVitals.js":"3","/home/danbo/Documents/React Flask/client/src/components/Anime.js":"4","/home/danbo/Documents/React Flask/client/src/components/Navbar.js":"5","/home/danbo/Documents/React Flask/client/src/components/Animate.js":"6","/home/danbo/Documents/React Flask/client/src/components/Menu.js":"7","/home/danbo/Documents/React Flask/client/src/components/Card.js":"8"},{"size":509,"mtime":1625967556735,"results":"9","hashOfConfig":"10"},{"size":1009,"mtime":1626249766001,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1625709688879,"results":"12","hashOfConfig":"10"},{"size":1826,"mtime":1625819594280,"results":"13","hashOfConfig":"10"},{"size":1050,"mtime":1626261837399,"results":"14","hashOfConfig":"10"},{"size":1990,"mtime":1626135231951,"results":"15","hashOfConfig":"10"},{"size":1280,"mtime":1626102885556,"results":"16","hashOfConfig":"10"},{"size":1546,"mtime":1626263270277,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1fgvrcl",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/danbo/Documents/React Flask/client/src/index.js",[],["36","37"],"/home/danbo/Documents/React Flask/client/src/App.js",["38","39"],"/home/danbo/Documents/React Flask/client/src/reportWebVitals.js",[],"/home/danbo/Documents/React Flask/client/src/components/Anime.js",["40","41"],"import React,{useEffect,useState} from 'react';\n\nexport const Anime =()=>{\n\n    \n    const [image,setImage]=useState(\"#\");\n    const [description,setDescription]=useState(\"Description\");\n    const [query,setQuery]=useState(\"\");\n    const [anime,setAnime]=useState(\"Nothing lies here\");\n\n    const submitHandler=(e)=>{\n        e.preventDefault();\n        fetch(\"/anime\", {\n            method:\"POST\",\n            cache: \"no-cache\",\n            headers:{\n                \"content_type\":\"application/json\",\n            },\n            body:JSON.stringify(query)\n            }\n        ).then(response => {\n    \n        return response.json()\n      })\n      .then(json => {\n    \n      setAnime(json.data.Media.title.native);\n      setDescription(json.data.Media.description);\n      setImage(json.data.Media.coverImage.medium);\n      })\n    }\n\n    // useEffect(()=>{\n    //     fetch('/anime').then(res=>res.json()).then(data=>{\n    //         setAnime(data.data.Media.title.english);\n    //     })\n    // },[]);\n    console.log(anime)\n    return(\n        <div className=\"container\">\n             \n            <div className=\"form-group text-center \">\n           <div className=\"form-group\">\n            <input className=\"form-control form-control-lg\"onChange={(e)=>setQuery(e.target.value)}></input>\n            </div>\n            <button className=\"btn btn-primary btn-lg\"onClick={submitHandler}>Submit</button>\n            </div>\n\n            <div className=\"card p-4 text-center shadow-lg border-0 \">\n            <img className=\"img-fluid rounded\"src={image} alt=\"No Image\"></img>\n            <div className=\"content\">\n            <p className=\"content-title font-size-24\">This  is {anime}</p>\n            <p className=\"text-muted font-size-20\">{description}</p>\n            </div>\n            </div>\n\n        </div>\n    )\n\n    \n}","/home/danbo/Documents/React Flask/client/src/components/Navbar.js",["42"],"/home/danbo/Documents/React Flask/client/src/components/Animate.js",[],"/home/danbo/Documents/React Flask/client/src/components/Menu.js",[],"/home/danbo/Documents/React Flask/client/src/components/Card.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":12},{"ruleId":"47","severity":1,"message":"51","line":4,"column":9,"nodeType":"49","messageId":"50","endLine":4,"endColumn":14},{"ruleId":"47","severity":1,"message":"52","line":1,"column":15,"nodeType":"49","messageId":"50","endLine":1,"endColumn":24},{"ruleId":"53","severity":1,"message":"54","line":50,"column":13,"nodeType":"55","endLine":50,"endColumn":74},{"ruleId":"47","severity":1,"message":"56","line":1,"column":9,"nodeType":"49","messageId":"50","endLine":1,"endColumn":20},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Anime' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'IoMenuSharp' is defined but never used.","no-global-assign","no-unsafe-negation"]