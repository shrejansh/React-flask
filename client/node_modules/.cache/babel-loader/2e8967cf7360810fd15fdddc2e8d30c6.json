{"ast":null,"code":"var _jsxFileName = \"/home/danbo/Documents/React Flask/client/src/components/Anime.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Anime = () => {\n  _s();\n\n  const [image, setImage] = useState(\"#\");\n  const [description, setDescription] = useState(\"Description\");\n  const [query, setQuery] = useState(\"\");\n  const [anime, setAnime] = useState(\"Nothing lies here\");\n\n  const submitHandler = e => {\n    e.preventDefault();\n    fetch(\"/anime\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        \"content_type\": \"application/json\"\n      },\n      body: JSON.stringify(query)\n    }).then(response => {\n      return response.json();\n    }).then(json => {\n      setAnime(json.data.Media.title.native);\n      setDescription(json.data.Media.description);\n      setImage(json.data.Media.coverImage.medium);\n    });\n  }; // useEffect(()=>{\n  //     fetch('/anime').then(res=>res.json()).then(data=>{\n  //         setAnime(data.data.Media.title.english);\n  //     })\n  // },[]);\n\n\n  console.log(anime);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group text-center \",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control form-control-lg\",\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-lg\",\n        onClick: submitHandler,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-4 text-center shadow-lg border-0 \",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"img-fluid rounded\",\n        src: image,\n        alt: \"No Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"content-title font-size-24\",\n          children: [\"This  is \", anime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted font-size-20\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Anime, \"a6TC5jjMJkrHOUOFseJrU/uHIFY=\");\n\n_c = Anime;\n\nvar _c;\n\n$RefreshReg$(_c, \"Anime\");","map":{"version":3,"sources":["/home/danbo/Documents/React Flask/client/src/components/Anime.js"],"names":["React","useEffect","useState","Anime","image","setImage","description","setDescription","query","setQuery","anime","setAnime","submitHandler","e","preventDefault","fetch","method","cache","headers","body","JSON","stringify","then","response","json","data","Media","title","native","coverImage","medium","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;;AAEA,OAAO,MAAMC,KAAK,GAAE,MAAI;AAAA;;AAGpB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBH,QAAQ,CAAC,GAAD,CAA/B;AACA,QAAM,CAACI,WAAD,EAAaC,cAAb,IAA6BL,QAAQ,CAAC,aAAD,CAA3C;AACA,QAAM,CAACM,KAAD,EAAOC,QAAP,IAAiBP,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACQ,KAAD,EAAOC,QAAP,IAAiBT,QAAQ,CAAC,mBAAD,CAA/B;;AAEA,QAAMU,aAAa,GAAEC,CAAD,IAAK;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK,CAAC,QAAD,EAAW;AACZC,MAAAA,MAAM,EAAC,MADK;AAEZC,MAAAA,KAAK,EAAE,UAFK;AAGZC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX,OAHI;AAMZC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeb,KAAf;AANO,KAAX,CAAL,CAQEc,IARF,CAQOC,QAAQ,IAAI;AAEnB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAXC,EAYDF,IAZC,CAYIE,IAAI,IAAI;AAEdb,MAAAA,QAAQ,CAACa,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgBC,KAAhB,CAAsBC,MAAvB,CAAR;AACArB,MAAAA,cAAc,CAACiB,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgBpB,WAAjB,CAAd;AACAD,MAAAA,QAAQ,CAACmB,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgBG,UAAhB,CAA2BC,MAA5B,CAAR;AACC,KAjBC;AAkBH,GApBD,CARoB,CA8BpB;AACA;AACA;AACA;AACA;;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYtB,KAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACA;AAAO,QAAA,SAAS,EAAC,8BAAjB;AAA+C,QAAA,QAAQ,EAAGG,CAAD,IAAKJ,QAAQ,CAACI,CAAC,CAACoB,MAAF,CAASC,KAAV;AAAtE;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA0C,QAAA,OAAO,EAAEtB,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAkC,QAAA,GAAG,EAAER,KAAvC;AAA8C,QAAA,GAAG,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACA;AAAG,UAAA,SAAS,EAAC,4BAAb;AAAA,kCAAoDM,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAG,UAAA,SAAS,EAAC,yBAAb;AAAA,oBAAwCJ;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAxDM;;GAAMH,K;;KAAAA,K","sourcesContent":["import React,{useEffect,useState} from 'react';\n\nexport const Anime =()=>{\n\n    \n    const [image,setImage]=useState(\"#\");\n    const [description,setDescription]=useState(\"Description\");\n    const [query,setQuery]=useState(\"\");\n    const [anime,setAnime]=useState(\"Nothing lies here\");\n\n    const submitHandler=(e)=>{\n        e.preventDefault();\n        fetch(\"/anime\", {\n            method:\"POST\",\n            cache: \"no-cache\",\n            headers:{\n                \"content_type\":\"application/json\",\n            },\n            body:JSON.stringify(query)\n            }\n        ).then(response => {\n    \n        return response.json()\n      })\n      .then(json => {\n    \n      setAnime(json.data.Media.title.native);\n      setDescription(json.data.Media.description);\n      setImage(json.data.Media.coverImage.medium);\n      })\n    }\n\n    // useEffect(()=>{\n    //     fetch('/anime').then(res=>res.json()).then(data=>{\n    //         setAnime(data.data.Media.title.english);\n    //     })\n    // },[]);\n    console.log(anime)\n    return(\n        <div className=\"container\">\n             \n            <div className=\"form-group text-center \">\n            <input className=\"form-control form-control-lg\"onChange={(e)=>setQuery(e.target.value)}></input>\n            <button className=\"btn btn-primary btn-lg\"onClick={submitHandler}>Submit</button>\n            </div>\n\n            <div className=\"card p-4 text-center shadow-lg border-0 \">\n            <img className=\"img-fluid rounded\"src={image} alt=\"No Image\"></img>\n            <div className=\"content\">\n            <p className=\"content-title font-size-24\">This  is {anime}</p>\n            <p className=\"text-muted font-size-20\">{description}</p>\n            </div>\n            </div>\n\n        </div>\n    )\n\n    \n}"]},"metadata":{},"sourceType":"module"}